// This schema is for reference - can be used when connecting to a database
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Resume {
  id        String   @id @default(cuid())
  userId    String
  title     String
  template  String   @default("modern")
  
  // Personal Info
  fullName  String
  email     String
  phone     String?
  location  String?
  summary   String?
  
  // Design Settings
  primaryColor    String   @default("#1e40af")
  accentColor     String   @default("#0f172a")
  fontFamily      String   @default("inter")
  
  // Sections
  experiences Experience[]
  educations  Education[]
  skills      Skill[]
  projects    Project[]
  
  // Metadata
  isPublic  Boolean  @default(false)
  shareToken String?  @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Experience {
  id        String   @id @default(cuid())
  resumeId  String
  resume    Resume   @relation(fields: [resumeId], references: [id], onDelete: Cascade)
  
  jobTitle  String
  company   String
  location  String?
  startDate String
  endDate   String?
  isCurrently Boolean @default(false)
  description String?
  order     Int
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Education {
  id        String   @id @default(cuid())
  resumeId  String
  resume    Resume   @relation(fields: [resumeId], references: [id], onDelete: Cascade)
  
  school    String
  degree    String
  field     String
  startDate String
  endDate   String?
  description String?
  order     Int
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Skill {
  id        String   @id @default(cuid())
  resumeId  String
  resume    Resume   @relation(fields: [resumeId], references: [id], onDelete: Cascade)
  
  name      String
  level     String?
  order     Int
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project {
  id        String   @id @default(cuid())
  resumeId  String
  resume    Resume   @relation(fields: [resumeId], references: [id], onDelete: Cascade)
  
  title     String
  description String?
  link      String?
  order     Int
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
